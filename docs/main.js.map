{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"main\\\">\\n\\t<div *ngIf=\\\"errorMessage\\\" class=\\\"red-letters mb-10px\\\"> {{ errorMessage }} </div>\\n\\t\\n\\tLimit: <input type=\\\"number\\\" (change)=\\\"changeLimit(limitInput.value)\\\" #limitInput min=\\\"1\\\" required>\\n\\n\\t<div class=\\\"mt-10px table-container\\\">\\n\\t\\t<table>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort != 'id'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('id', 'asc')\\\"> ID </a>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort == 'id' && order == 'asc'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('id', 'desc')\\\"> ID ↑ </a>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort == 'id' && order == 'desc'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('id', 'asc')\\\"> ID ↓ </a>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort != 'username'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('username', 'asc')\\\"> Username </a>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort == 'username' && order == 'asc'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('username', 'desc')\\\"> Username ↑ </a>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort == 'username' && order == 'desc'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('username', 'asc')\\\"> Username ↓ </a>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort != 'email'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('email', 'asc')\\\"> Email </a>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort == 'email' && order == 'asc'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('email', 'desc')\\\"> Email ↑ </a>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort == 'email' && order == 'desc'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('email', 'asc')\\\"> Email ↓ </a>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort != 'score'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('score', 'asc')\\\"> Score </a>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort == 'score' && order == 'asc'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('score', 'desc')\\\"> Score ↑ </a>\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"sort == 'score' && order == 'desc'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeSorting('score', 'asc')\\\"> Score ↓ </a>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr *ngFor=\\\"let row of tableData\\\">\\n\\t\\t\\t\\t<td> {{ row.id }} </td>\\n\\t\\t\\t\\t<td> {{ row.username }} </td>\\n\\t\\t\\t\\t<td> {{ row.email }} </td>\\n\\t\\t\\t\\t<td> {{ row.score }} </td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t\\n\\t\\t\\t<tr *ngIf=\\\"noData == true\\\">\\n\\t\\t\\t\\t<td class=\\\"red-letters\\\" colspan=\\\"4\\\"> No Data </td>\\n\\t\\t\\t</tr>\\n\\t\\t</table>\\n\\t</div>\\n\\n\\t<div *ngIf=\\\"size > limit\\\" class=\\\"pagination-container mt-10px\\\">\\n\\t\\t<button [ngClass]=\\\"{'no-hover': page == 1}\\\" class=\\\"mr-3px\\\" [disabled]=\\\"page == 1\\\" (click)=\\\"changePage(page - 1)\\\"> &laquo; </button>\\n\\t\\t<button *ngIf=\\\"page >= 3\\\" class=\\\"mr-3px\\\" (click)=\\\"changePage(1)\\\"> 1 </button>\\n\\t\\t<div *ngIf=\\\"page >= 4\\\" class=\\\"mr-3px mt-7px\\\"> ... </div>\\n\\t\\t<button [ngClass]=\\\"{'active no-hover': buttonArray[0] == page}\\\" class=\\\"mr-3px\\\" (click)=\\\"changePage(buttonArray[0])\\\"> {{ buttonArray[0] }} </button>\\n\\t\\t<button [ngClass]=\\\"{'active no-hover': buttonArray[1] == page}\\\" class=\\\"mr-3px\\\" (click)=\\\"changePage(buttonArray[1])\\\"> {{ buttonArray[1] }} </button>\\n\\t\\t<button *ngIf=\\\"end != 2\\\" [ngClass]=\\\"{'active no-hover': buttonArray[2] == page}\\\" class=\\\"mr-3px\\\" (click)=\\\"changePage(buttonArray[2])\\\"> {{ buttonArray[2] }} </button>\\n\\t\\t<div *ngIf=\\\"page <= (end - 3)\\\" class=\\\"mr-3px mt-7px\\\"> ... </div>\\n\\t\\t<button *ngIf=\\\"page <= (end - 2)\\\" class=\\\"mr-3px\\\" (click)=\\\"changePage(end)\\\"> {{ end }} </button>\\n\\t\\t<button [ngClass]=\\\"{'no-hover': page == end}\\\" [disabled]=\\\"page == end\\\" class=\\\"mr-3px\\\" (click)=\\\"changePage(page + 1)\\\"> &raquo; </button>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface Size {\n\tnumber: number;\n}\n\ninterface Data {\n\tid: number;\n\tusername: string;\n\temail: string;\n\tscore: number;\n}\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\tsizeSub;\t\t\t\t\t\t\t\t\t//variables for managing subscriptions\n\tdataSub;\n\t\n\tpage: number;\t\t\t\t\t\t\t\t\t//current page\n\tlimit: number;\t\t\t\t\t\t\t\t\t//page limit\n\tsort: string;\t\t\t\t\t\t\t\t\t//property by which table is sorted\n\torder: string;\t\t\t\t\t\t\t\t\t//ascending or descending order\n\tend: number;\t\t\t\t\t\t\t\t\t//last page\n\t\n\terrorMessage: string;\t\t\t\t\t\t\t\t//error message\n\t\n\tsize: number;\t\t\t\t\t\t\t\t\t//total data size\n\ttableData: Array<Data> = [];\t\t\t\t\t\t\t//data displayed in table\n\tnoData: boolean;\t\t\t\t\t\t\t\t//true if empty table\n\t\n\tbuttonArray: Array<number>;\t\t\t\t\t\t\t//button values for pagination\n\n\tconstructor(private http: HttpClient) {}\n\t\n\t@HostListener('document:keydown', ['$event'])\t\t\t\t\t//when key is pressed\n\thandleKeyboardEvent(event: KeyboardEvent) {\n\t\tif (event.key == 'ArrowRight' && this.page != this.end) {\t\t//if right arrow is pressed and current page isnt the last\n\t\t\tthis.changePage(this.page + 1);\t\t\t\t\t//go to next page\n\t\t}\n\t\telse if (event.key == 'ArrowLeft' && this.page != 1) {\t\t\t//if left arrow is pressed and current page isnt the 1st\n\t\t\tthis.changePage(this.page - 1);\t\t\t\t\t//go to last page\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.page = 1;\t\t\t\t\t\t\t\t//initialize variables\n\t\tthis.limit = 10;\n\t\tthis.sort = 'id';\n\t\tthis.order = 'asc';\n\t\tthis.errorMessage = null;\n\t\tthis.buttonArray = [ 1, 2, 3 ];\n\n\t\tthis.getSize();\t\t\t\t\t\t\t\t//call function getSize\n\t}\n\n\tgetSize() {\n\t\tlet url: string = 'http://localhost:3000/size';\t\t\t\t//this is the url from where we are going to get data\n\t\t\n\t\tthis.sizeSub = this.http.get<Size>(url).subscribe(data => {\t\t//subscribe to server's response\n\t\t\tthis.size = data.number;\t\t\t\t\t//assign server's response to a variable\n\t\t\tthis.errorMessage = null;\t\t\t\t\t//no error occured, so there is no error message\n\t\t\t\n\t\t\tthis.getData();\t\t\t\t\t\t\t//call function getData\n\t\t}, error => {\t\t\t\t\t\t\t\t//in case of error\n\t\t\tthis.connectionErrorHandler();\t\t\t\t\t//call function connectionErrorHandler\n\t\t});\n\t}\n\n\tgetData() {\n\t\tlet url: string;\n\t\tthis.end = Math.ceil(this.size / this.limit);\t\t\t\t//calculate last page\n\t\turl = 'http://localhost:3000/data' + '?_page=' + this.page + '&_limit=' + this.limit + '&_sort=' + this.sort + '&_order=' + this.order;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//if the url seems complicated, read the documentation of json-server on github\n\t\tthis.dataSub = this.http.get<Data[]>(url).subscribe(data => {\t\t//subscribe to server's response\n\t\t\tthis.tableData = data;\t\t\t\t\t\t//assign server's response to a variable\n\t\t\tthis.noData = false;\n\t\t\tthis.errorMessage = '';\t\t\t\t\t\t//no error occured, so there is no error message\n\t\t}, error => {\t\t\t\t\t\t\t\t//in case of error\n\t\t\tthis.connectionErrorHandler();\t\t\t\t\t//call function connectionErrorHandler\n\t\t});\n\t}\n\n\tchangePage(page: number) {\n\t\tthis.page = page;\t\t\t\t\t\t\t//refresh page\n\t\tif (this.page == 1 || this.page == 2) {\t\t\t\t\t//depending on selected page, display the correct buttons for pagination\n\t\t\tthis.buttonArray = [ 1, 2, 3 ];\n\t\t}\n\t\telse if (this.page == this.end || this.page == this.end - 1) {\n\t\t\tthis.buttonArray = [ this.end - 2, this.end - 1, this.end ];\n\t\t}\n\t\telse {\n\t\t\tthis.buttonArray = [ this.page - 1, this.page, this.page + 1 ];\n\t\t}\n\t\t\n\t\tthis.getData();\t\t\t\t\t\t\t\t//call function getData\n\t}\n\n\tchangeLimit(limit: string) {\n\t\tthis.limit = (Number(limit) > 0) ? Number(limit) : 10;\t\t\t//initialize limit if it is invalid\n\t\tthis.page = 1;\t\t\t\t\t\t\t\t//set page to 1\n\t\tthis.buttonArray = [ 1, 2, 3 ];\t\t\t\t\t\t//display the correct buttons\n\t\t\n\t\tthis.getData();\t\t\t\t\t\t\t\t//call function getData\n\t}\n\n\tchangeSorting(column: string, order: string) {\n\t\tthis.sort = column;\t\t\t\t\t\t\t//refresh variables\n\t\tthis.order = order;\n\t\t\n\t\tthis.getData();\t\t\t\t\t\t\t\t//call function getData\n\t}\n\t\n\tconnectionErrorHandler() {\n\t\tthis.tableData = [];\t\t\t\t\t\t\t//no data to display\n\t\tthis.noData = true;\n\t\tthis.errorMessage = \"Probably json-server isnt running\";\t\t//display error message\n\t}\n\n\tngOnDestroy() {\n\t\tthis.sizeSub.unsubscribe();\t\t\t\t\t\t//delete subscriptions to server\n\t\tthis.dataSub.unsubscribe();\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tHttpClientModule\n\t],\n\tproviders: [],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}